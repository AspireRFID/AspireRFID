/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ALEGeneralInfoPanel.java
 *
 * Created on 22 f√©vr. 2010, 02:14:26
 */

package org.ow2.aspirerfid.management.views;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map.Entry;
import javax.swing.AbstractListModel;
import org.ow2.aspirerfid.management.model.PluginModel;

/**
 *
 * @author Kiev
 */
public class ALEGeneralInfoPanel extends javax.swing.JPanel implements PropertyChangeListener {
    private PluginModel model;

    /** Creates new form ALEGeneralInfoPanel */
    public ALEGeneralInfoPanel() {
        initComponents();
    }

    public ALEGeneralInfoPanel(PluginModel model) {
        this.model = model;
        initComponents();
        initModel();
    }

    private void initModel() {
        Iterator<Entry> entries = model.getProperties().entrySet().iterator();
        final ArrayList list = new ArrayList();
        while (entries.hasNext()) {
            Entry entry = entries.next();
            list.add(entry.getKey() + ":" + entry.getValue());
        }
        this.jList1.setModel(new AbstractListModel() {

            public int getSize() {
                return list.size();
            }

            public Object getElementAt(int index) {
                return list.get(index);
            }
        });
        setFormattedUptime(model.getUptime());
        model.addPropertyChangeListener(this);
    }

    public void propertyChange(PropertyChangeEvent evt) {
        if (PluginModel.UPTIME_PROPERTY.equals(evt.getPropertyName()) ) {
            setFormattedUptime(model.getUptime());
        }
    }

    private void setFormattedUptime(long miliseconds) {
        int totalSeconds = (int)(miliseconds / 1000);
        int totalMinutes = totalSeconds / 60;
        int totalHours = totalMinutes / 60;
        int seconds = totalSeconds % 60;
        int minutes = totalMinutes % 60;

        StringBuffer sb = new StringBuffer();
        //TODO Use messageformat or something that already does that
        if (totalHours < 10) {
            sb.append("0");
        }
        sb.append(totalHours).append(":");
        if (minutes < 10) {
            sb.append("0");
        }
        sb.append(minutes).append(":");
        if (seconds < 10) {
            sb.append("0");
        }
        sb.append(seconds).append(" (hh:mm:ss)");
        this.uptimeLabel.setText(sb.toString());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        uptimeLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13));
        jLabel1.setText(org.openide.util.NbBundle.getMessage(ALEGeneralInfoPanel.class, "ALEGeneralInfoPanel.jLabel1.text")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13));
        jLabel2.setText(org.openide.util.NbBundle.getMessage(ALEGeneralInfoPanel.class, "ALEGeneralInfoPanel.jLabel2.text")); // NOI18N

        uptimeLabel.setText(org.openide.util.NbBundle.getMessage(ALEGeneralInfoPanel.class, "ALEGeneralInfoPanel.uptimeLabel.text")); // NOI18N

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(uptimeLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(uptimeLabel)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel uptimeLabel;
    // End of variables declaration//GEN-END:variables

}
