# ---------------------------------------------------------------------------
# JOnAS: Java(TM) Open Application Server
# Copyright (C) 1999-2005 Bull S.A.
# Contact: jonas-team@objectweb.org
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
# USA
#
#
# ---------------------------------------------------------------------------
# $Id: jonas.properties 8230 2006-04-11 14:14:10Z pelletib $
# ---------------------------------------------------------------------------


###################### JOnAS Server configuration
#  The current file is in the <jonas-install>/conf directory. It can be copyed and
#  customized in JONAS_BASE/conf directory
######################

# Enable the Security context propagation (for jrmp)
# In case of Jeremie, this has no effect : You should modify jonathan.xml
jonas.security.propagation    true

# Enable the Security manager
# default value is true (if not set)
# Setting this to false implies a colocated registry and setting in carol.properties:
# carol.jvm.rmi.local.registry=true
jonas.security.manager    true

# Enable csiv2
jonas.csiv2.propagation    true

# Enable the Transaction context propagation
jonas.transaction.propagation    true

#  Set the name of log configuration file
jonas.log.configfile    trace

#  Set the list of the services launched in the JOnAS Server.
#  Possible services are: registry,jmx,security,jtm,db,mail,dbm,resource,jms,ejb,ws,web,ear,discovery,ha
#  registry,jmx,jtm,ejb are mandatory
#  (registry and jmx are automatically started even if not present in the list)
#  Order in the list is important (see 'Configuring JOnAS services' in JOnAS documentation)
#
jonas.services    registry,jmx,jtm,db,dbm,security,resource,ejb,ws,web,ear

#
###################### JOnAS Registry service configuration
#
#  Set the name of the implementation class of the Registry service
jonas.service.registry.class org.objectweb.jonas.registry.RegistryServiceImpl

#  Set the Registry launching mode
#  If set to 'automatic', the registry is launched in the same JVM as Application Server,
#                         if it's not already started.
#  If set to 'collocated', the registry is launched in the same JVM as Application Server
#  If set to 'remote', the registry has to be launched before in a separate JVM
jonas.service.registry.mode    automatic

#
###################### JOnAS JMX service configuration
#
#  Set the name of the implementation class of the jmx service
jonas.service.jmx.class		org.objectweb.jonas.jmx.JmxServiceImpl


#
###################### JOnAS EJB Container service configuration
#
#  Set the name of the implementation class of the ejb service
jonas.service.ejb.class		org.objectweb.jonas.container.EJBServiceImpl

#  Set the list of directories that contains ejbjars that must be deployed by
#  the JOnAS Server at launch time.
#  Here should be given a coma-separated list of directories.
#  If the directory has a relative path, this path is relative from where the
#  Application Server is launched.
#  If the directory is not found it will be searched in JONAS_BASE/ejbjars/
#  directory.
jonas.service.ejb.autoloaddir    autoload

#  Set the list of ejbjars that must be deployed by the JOnAS Server at launch time.
#  Here should be given a coma-separated list of ejb-jar files names or standard XML deployment
#  descriptors files names.
#  If the file name has a relative path, this path is relative from where the
#  Application Server is launched.
jonas.service.ejb.descriptors

#  Set the XML deployment descriptors parsing mode (with or without validation)
jonas.service.ejb.parsingwithvalidation    true

#  Set the size of the worker thread pool
jonas.service.ejb.minworkthreads   3

#  Set the maximun size of the worker thread pool
jonas.service.ejb.maxworkthreads   80

#  Set the max # of seconds that a thread will wait for work
#  This is used to shrink the worker thread pool back to minimum
jonas.service.ejb.threadwaittimeout 60

#
###################### JOnAS Web container service configuration
#
#  Set the name of the implementation class of the web container service.
jonas.service.web.class    org.objectweb.jonas.web.wrapper.catalina55.CatalinaJWebContainerServiceWrapper
#jonas.service.web.class    org.objectweb.jonas.web.jetty50.JettyJWebContainerServiceImpl

#  Set the list of directories that contains wars that must be deployed by
#  the JOnAS Server at launch time.
#  Here should be given a coma-separated list of directories.
#  If the directory has a relative path, this path is relative from where the
#  Application Server is launched.
#  If the directory is not found it will be searched in JONAS_BASE/webapps/
#  directory.
jonas.service.web.autoloaddir    autoload

#  Set the list of wars that must be depoyed by the JOnAS Server at launch time.
#  Here should be given a coma-separated list of war files names.
#  If the file name has a relative path, this path is relative from where the
#  Application Server is launched.
jonas.service.web.descriptors

#  Set the XML deployment descriptors parsing mode for the WEB container
#  service (with or without validation).
jonas.service.web.parsingwithvalidation    true

###################### JOnAS WebServices service configuration
#
#  Set the name of the implementation class of the WebServices service.
jonas.service.ws.class    org.objectweb.jonas.ws.axis.AxisWSServiceImpl

# Set the JServiceFactory to use
jonas.service.ws.factory.class org.objectweb.jonas.ws.axis.JAxisServiceFactory

#  Set the XML deployment descriptors parsing mode for the WebServices
#  service (with or without validation).
jonas.service.ws.parsingwithvalidation    true

#  Set the WSDL Handler list for WSDL publication
#  A minimum of 1 WSDLHandler is required !
#  This property is set with a coma-separated list of WSDLHandler properties
#  file names (without the '.properties' suffix).
#  Ex: file1,uddi (while the properties file names are
#                  file1.properties and uddi.properties)
jonas.service.ws.wsdlhandlers file1

# Set the Generator to use with wsgen
jonas.service.ws.wsgen.generator.factory     org.objectweb.jonas_ws.wsgen.generator.ews.EWSGeneratorFactory

# Set the prefix that will be used to compute URL endpoints for web services
#jonas.service.ws.url-prefix http://www.mydomain.com:8888

# Set automatic WsGen mode on/off
# If set to 'true', WsGen will automatically be applied to all deployed archives (EjbJars, Webapps, Applications)
# default to 'true'
#jonas.service.ws.auto-wsgen.engaged false

#
###################### JOnAS JAXR service configuration (Deprecated)
#
#  Set the name of the implementation class of the Registry service
#jonas.service.jaxr.class org.objectweb.jonas.jaxr.JAXRServiceImpl

#  Set the jonas jaxr factories.
#  This property is set with a coma-separated list of JAXRFactory properties
#  file names (without the '.properties' suffix).
#  Ex: jaxr,jaxr2 (while the properties file names are
#                  jaxr.properties and jaxr2.properties)
#jonas.service.jaxr.factories    jaxr

#
###################### JOnAS EAR service configuration
#
#  Set the name of the implementation class of the ear service.
jonas.service.ear.class		org.objectweb.jonas.ear.EarServiceImpl

#  Set the list of directories that contains ears that must be deployed by
#  the JOnAS Server at launch time.
#  Here should be given a coma-separated list of directories.
#  If the directory has a relative path, this path is relative from where the
#  Application Server is launched.
#  If the directory is not found it will be searched in JONAS_BASE/apps/
#  directory.
jonas.service.ear.autoloaddir    autoload

#  Set the list of ears that must be depoyed by the JOnAS Server at launch time.
#  Here should be given a coma-separated list of ear files names.
#  If the file name has a relative path, this path is relative from where the
#  Application Server is launched.
jonas.service.ear.descriptors

#  Set the XML deployment descriptors parsing mode for the EAR service
#  (with or without validation).
jonas.service.ear.parsingwithvalidation    true

#
###################### JOnAS DBM Database service configuration
#
#  Set the name of the implementation class of the dbm service
jonas.service.dbm.class		org.objectweb.jonas.dbm.DataBaseServiceImpl

#  Set the jonas DataSources. This enables the JOnAS server to load
#  the data dources, to load related jdbc drivers, and to register the data
#  sources into JNDI.
#  This property is set with a coma-separated list of Datasource properties
#  file names (without the '.properties' suffix).
#  Ex: Oracle1,InstantDB1 (while the Datasources properties file names are
#                          Oracle1.properties and InstantDB1.properties)
jonas.service.dbm.datasources    HSQL_rfid

#
###################### JOnAS Mail service configuration
#
#  Set the name of the implementation class of the mail service
jonas.service.mail.class	org.objectweb.jonas.mail.MailServiceImpl

#  Set the jonas mail factories.
#  This property is set with a coma-separated list of MailFactory properties
#  file names (without the '.properties' suffix).
#  Ex: MailSession1,MailMimePartDS1 (while the properties file names are
#                  MailSession1.properties and MailMimePartDS1.properties)
jonas.service.mail.factories

#
###################### JOnAS JTM Transaction service configuration
#

#  Set the name of the implementation class of the jtm service
jonas.service.jtm.class		org.objectweb.jonas.jtm.TransactionServiceImpl

#  Set the Transaction Manager launching mode.
#  If set to 'true', TM is remote: TM must be already launched in an other JVM.
#  If set to 'false', TM is local: TM is going to run into the same JVM
#  than the jonas Server.
jonas.service.jtm.remote    false

#  Set the default transaction timeout, in seconds.
jonas.service.jtm.timeout    60


#
###################### JOnAS SECURITY service configuration
#
#  Set the name of the implementation class of the security service
jonas.service.security.class	org.objectweb.jonas.security.JonasSecurityServiceImpl

# Realm used for CsiV2 authentication
jonas.service.security.csiv2.realm    memrlm_1

# Realm used for Web Service authentication
jonas.service.security.ws.realm    memrlm_1

# Registration of realm resources into JNDI
# Disable by default so configuration is not available with clients
jonas.service.security.realm.jndi.registration    false


#
###################### JOnAS JMS service configuration
#
#  Set the name of the implementation class of the jms service
jonas.service.jms.class		org.objectweb.jonas.jms.JmsServiceImpl

#  Indicates the Jms service must be started with this class for administering the mom
jonas.service.jms.mom    org.objectweb.jonas_jms.JmsAdminForJoram

#  Set the Jms Server launching mode
#  If set to 'true'  it is launched in the same JVM as Application Server
#  If set to 'false' Jms Server is launched in a separate JVM
jonas.service.jms.collocated    true

#  Set to the url connexion when the Jms server is not collocated
#jonas.service.jms.url    joram://localhost:16010

# Set the list of administered objects topics to be created at Application Server launching time
# Note : When using resource service (default configuration), topics should go in joram-admin.cfg file
jonas.service.jms.topics    sampleTopic, rfidreporttopic, rfidmediatortopic

# Set the list of administered objecst queuess to be created at Application Server launching time
# Note : When using resource service (default configuration), queues should go in joram-admin.cfg file
#jonas.service.jms.queues    sampleQueue

#
###################### JOnAS J2CA resource service configuration
#
#  Set the name of the implementation class of the J2CA resource service
jonas.service.resource.class	org.objectweb.jonas.resource.ResourceServiceImpl

#  Set the list of directories that contains rars that must be deployed by
#  the JOnAS Server at launch time.
#  Here should be given a comma-separated list of directories.
#  If the directory has a relative path, this path is relative from where the
#  Application Server is launched.
#  If the directory is not found it will be searched in JONAS_BASE/rars/
#  directory.
jonas.service.resource.autoloaddir    autoload

#  Set the XML connector deployment descriptors parsing mode (with or without validation)
jonas.service.resource.parsingwithvalidation    true

#  Set the min size of the worker thread pool used for all J2CA 1.5 Resource Adapters deployed
jonas.service.resource.minworkthreads  5

#  Set the max size of the worker thread pool used for all J2CA 1.5 Resource Adapters deployed
jonas.service.resource.maxworkthreads  80

#  Set the max # of seconds that a thread will wait for work
#  This is used to shrink the worker thread pool back to minimum
jonas.service.resource.threadwaittimeout 60

#  Set the max # of seconds of execution time for a work object
#  This functionality may not be supported by all Resource Adapter
jonas.service.resource.execworktimeout 0

#  Set the list of Resource Adapter to be used.
#  This enables the JOnAS server to configure the resource adapter and register it into JNDI.
#  This property is set with a coma-separated list of rar file names
#   (with/without the '.rar' suffix).
#  Ex: XXXX,YYYY (while the rar file names are XXXX.rar and YYYY.rar)
jonas.service.resource.resources



###################### JOnAS DB service configuration
#
#  Set the name of the implementation class of the db service (hsql for example)
jonas.service.db.class    org.objectweb.jonas.db.hsqldb.HsqlDBServiceImpl
jonas.service.db.port    9001
jonas.service.db.dbname    db_jonas
jonas.service.db.user1    jonas:jonas
#jonas.service.db.user2    login:password

###################### JOnAS Discovery service
#
#  Set the name of the implementation class of the discovery service
#  The server is not a discovery master, unless its name is
#  identical to the domain name
#jonas.service.discovery.master = true
#  If this is a master, the discovery client source port may be configured
#  with the property:
#jonas.service.discovery.source.port=9888
#
#  Set the name of the implementation class and initialization parameters
jonas.service.discovery.class=org.objectweb.jonas.discovery.DiscoveryServiceImpl
jonas.service.discovery.multicast.address=224.224.224.224
jonas.service.discovery.multicast.port=9080

#  A multicast greeting message is sent out when discovery service is started.
#  The starting server listens at the port jonas.service.discovery.greeting.port
#  (default 9899) for a response for jonas.service.discovery.greeting.timeout miliseconds
#  (default 1000 ms). If a pre-existing server has the same server name as this one,
#  this server's discovery service will be terminated.

#jonas.service.discovery.greeting.port=9899
#jonas.service.discovery.greeting.timeout=1000

###################### JOnAS HA service configuration
#
#  Set the name of the implementation class of the HA service.
jonas.service.ha.class    org.objectweb.jonas.ha.HaServiceImpl

# Set the group communication framework to use
jonas.service.ha.gcl jgroups

# Set the JGroups configuration file name
jonas.service.ha.jgroups.conf jgroups-ha.xml