/*
 * Copyright © 2008-2010, Aspire
 * 
 * Aspire is free software; you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License version 2.1 as published by
 * the Free Software Foundation (the "LGPL").
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library in the file COPYING-LGPL-2.1; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301 USA.
 * 
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied. See the GNU Lesser General Public License
 * for the specific language governing rights and limitations.
 */
 
package org.ow2.aspirerfid.ide.MasterDataEditorGMF.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.ow2.aspirerfid.ide.MasterDataEditorGMF.util.MasterDataEditorGMFAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class MasterDataEditorGMFItemProviderAdapterFactory extends MasterDataEditorGMFAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MasterDataEditorGMFItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Company} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompanyItemProvider companyItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Company}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompanyAdapter() {
		if (companyItemProvider == null) {
			companyItemProvider = new CompanyItemProvider(this);
		}

		return companyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.BizLoc} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BizLocItemProvider bizLocItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.BizLoc}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBizLocAdapter() {
		if (bizLocItemProvider == null) {
			bizLocItemProvider = new BizLocItemProvider(this);
		}

		return bizLocItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Warehouse} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WarehouseItemProvider warehouseItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Warehouse}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWarehouseAdapter() {
		if (warehouseItemProvider == null) {
			warehouseItemProvider = new WarehouseItemProvider(this);
		}

		return warehouseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Room} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoomItemProvider roomItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Room}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoomAdapter() {
		if (roomItemProvider == null) {
			roomItemProvider = new RoomItemProvider(this);
		}

		return roomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Section} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SectionItemProvider sectionItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Section}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSectionAdapter() {
		if (sectionItemProvider == null) {
			sectionItemProvider = new SectionItemProvider(this);
		}

		return sectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.ReadPoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReadPointItemProvider readPointItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.ReadPoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReadPointAdapter() {
		if (readPointItemProvider == null) {
			readPointItemProvider = new ReadPointItemProvider(this);
		}

		return readPointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainerItemProvider containerItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainerAdapter() {
		if (containerItemProvider == null) {
			containerItemProvider = new ContainerItemProvider(this);
		}

		return containerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Conveyor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConveyorItemProvider conveyorItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Conveyor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConveyorAdapter() {
		if (conveyorItemProvider == null) {
			conveyorItemProvider = new ConveyorItemProvider(this);
		}

		return conveyorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Shelf} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ShelfItemProvider shelfItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Shelf}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createShelfAdapter() {
		if (shelfItemProvider == null) {
			shelfItemProvider = new ShelfItemProvider(this);
		}

		return shelfItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Gate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GateItemProvider gateItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Gate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGateAdapter() {
		if (gateItemProvider == null) {
			gateItemProvider = new GateItemProvider(this);
		}

		return gateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.PalletTruck} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PalletTruckItemProvider palletTruckItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.PalletTruck}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPalletTruckAdapter() {
		if (palletTruckItemProvider == null) {
			palletTruckItemProvider = new PalletTruckItemProvider(this);
		}

		return palletTruckItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.PushArm} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PushArmItemProvider pushArmItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.PushArm}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPushArmAdapter() {
		if (pushArmItemProvider == null) {
			pushArmItemProvider = new PushArmItemProvider(this);
		}

		return pushArmItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.HandHeldReader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HandHeldReaderItemProvider handHeldReaderItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.HandHeldReader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHandHeldReaderAdapter() {
		if (handHeldReaderItemProvider == null) {
			handHeldReaderItemProvider = new HandHeldReaderItemProvider(this);
		}

		return handHeldReaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Container1ItemProvider container1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainer1Adapter() {
		if (container1ItemProvider == null) {
			container1ItemProvider = new Container1ItemProvider(this);
		}

		return container1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Container2ItemProvider container2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainer2Adapter() {
		if (container2ItemProvider == null) {
			container2ItemProvider = new Container2ItemProvider(this);
		}

		return container2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Container3ItemProvider container3ItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainer3Adapter() {
		if (container3ItemProvider == null) {
			container3ItemProvider = new Container3ItemProvider(this);
		}

		return container3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container4} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Container4ItemProvider container4ItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container4}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainer4Adapter() {
		if (container4ItemProvider == null) {
			container4ItemProvider = new Container4ItemProvider(this);
		}

		return container4ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container5} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Container5ItemProvider container5ItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container5}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainer5Adapter() {
		if (container5ItemProvider == null) {
			container5ItemProvider = new Container5ItemProvider(this);
		}

		return container5ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container6} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Container6ItemProvider container6ItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container6}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainer6Adapter() {
		if (container6ItemProvider == null) {
			container6ItemProvider = new Container6ItemProvider(this);
		}

		return container6ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container7} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Container7ItemProvider container7ItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container7}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainer7Adapter() {
		if (container7ItemProvider == null) {
			container7ItemProvider = new Container7ItemProvider(this);
		}

		return container7ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container8} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Container8ItemProvider container8ItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container8}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainer8Adapter() {
		if (container8ItemProvider == null) {
			container8ItemProvider = new Container8ItemProvider(this);
		}

		return container8ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container9} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Container9ItemProvider container9ItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container9}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainer9Adapter() {
		if (container9ItemProvider == null) {
			container9ItemProvider = new Container9ItemProvider(this);
		}

		return container9ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container10} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Container10ItemProvider container10ItemProvider;

	/**
	 * This creates an adapter for a {@link org.ow2.aspirerfid.ide.MasterDataEditorGMF.Container10}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainer10Adapter() {
		if (container10ItemProvider == null) {
			container10ItemProvider = new Container10ItemProvider(this);
		}

		return container10ItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (companyItemProvider != null) companyItemProvider.dispose();
		if (bizLocItemProvider != null) bizLocItemProvider.dispose();
		if (warehouseItemProvider != null) warehouseItemProvider.dispose();
		if (roomItemProvider != null) roomItemProvider.dispose();
		if (sectionItemProvider != null) sectionItemProvider.dispose();
		if (readPointItemProvider != null) readPointItemProvider.dispose();
		if (containerItemProvider != null) containerItemProvider.dispose();
		if (conveyorItemProvider != null) conveyorItemProvider.dispose();
		if (shelfItemProvider != null) shelfItemProvider.dispose();
		if (gateItemProvider != null) gateItemProvider.dispose();
		if (palletTruckItemProvider != null) palletTruckItemProvider.dispose();
		if (pushArmItemProvider != null) pushArmItemProvider.dispose();
		if (handHeldReaderItemProvider != null) handHeldReaderItemProvider.dispose();
		if (container1ItemProvider != null) container1ItemProvider.dispose();
		if (container2ItemProvider != null) container2ItemProvider.dispose();
		if (container3ItemProvider != null) container3ItemProvider.dispose();
		if (container4ItemProvider != null) container4ItemProvider.dispose();
		if (container5ItemProvider != null) container5ItemProvider.dispose();
		if (container6ItemProvider != null) container6ItemProvider.dispose();
		if (container7ItemProvider != null) container7ItemProvider.dispose();
		if (container8ItemProvider != null) container8ItemProvider.dispose();
		if (container9ItemProvider != null) container9ItemProvider.dispose();
		if (container10ItemProvider != null) container10ItemProvider.dispose();
	}

}
